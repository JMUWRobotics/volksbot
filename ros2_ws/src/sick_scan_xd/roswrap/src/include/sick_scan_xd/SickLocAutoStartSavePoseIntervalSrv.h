#include "sick_scan/sick_scan_base.h" /* Base definitions included in all header files, added by add_sick_scan_base_header.py. Do not edit this line. */
// Generated by gencpp from file sick_scan/SickLocAutoStartSavePoseIntervalSrv.msg
// DO NOT EDIT!


#ifndef SICK_SCAN_MESSAGE_SICKLOCAUTOSTARTSAVEPOSEINTERVALSRV_H
#define SICK_SCAN_MESSAGE_SICKLOCAUTOSTARTSAVEPOSEINTERVALSRV_H

#include <ros/service_traits.h>


#include <sick_scan_xd/SickLocAutoStartSavePoseIntervalSrvRequest.h>
#include <sick_scan_xd/SickLocAutoStartSavePoseIntervalSrvResponse.h>


namespace sick_scan_xd
{

struct SickLocAutoStartSavePoseIntervalSrv
{

typedef SickLocAutoStartSavePoseIntervalSrvRequest Request;
typedef SickLocAutoStartSavePoseIntervalSrvResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct SickLocAutoStartSavePoseIntervalSrv
} // namespace sick_scan_xd


namespace roswrap
{
namespace service_traits
{


template<>
struct MD5Sum< ::sick_scan_xd::SickLocAutoStartSavePoseIntervalSrv > {
  static const char* value()
  {
    return "d207e538a84e09936248d36887c3f589";
  }

  static const char* value(const ::sick_scan_xd::SickLocAutoStartSavePoseIntervalSrv&) { return value(); }
};

template<>
struct DataType< ::sick_scan_xd::SickLocAutoStartSavePoseIntervalSrv > {
  static const char* value()
  {
    return "sick_scan/SickLocAutoStartSavePoseIntervalSrv";
  }

  static const char* value(const ::sick_scan_xd::SickLocAutoStartSavePoseIntervalSrv&) { return value(); }
};


// service_traits::MD5Sum< ::sick_scan_xd::SickLocAutoStartSavePoseIntervalSrvRequest> should match
// service_traits::MD5Sum< ::sick_scan_xd::SickLocAutoStartSavePoseIntervalSrv >
template<>
struct MD5Sum< ::sick_scan_xd::SickLocAutoStartSavePoseIntervalSrvRequest>
{
  static const char* value()
  {
    return MD5Sum< ::sick_scan_xd::SickLocAutoStartSavePoseIntervalSrv >::value();
  }
  static const char* value(const ::sick_scan_xd::SickLocAutoStartSavePoseIntervalSrvRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::sick_scan_xd::SickLocAutoStartSavePoseIntervalSrvRequest> should match
// service_traits::DataType< ::sick_scan_xd::SickLocAutoStartSavePoseIntervalSrv >
template<>
struct DataType< ::sick_scan_xd::SickLocAutoStartSavePoseIntervalSrvRequest>
{
  static const char* value()
  {
    return DataType< ::sick_scan_xd::SickLocAutoStartSavePoseIntervalSrv >::value();
  }
  static const char* value(const ::sick_scan_xd::SickLocAutoStartSavePoseIntervalSrvRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::sick_scan_xd::SickLocAutoStartSavePoseIntervalSrvResponse> should match
// service_traits::MD5Sum< ::sick_scan_xd::SickLocAutoStartSavePoseIntervalSrv >
template<>
struct MD5Sum< ::sick_scan_xd::SickLocAutoStartSavePoseIntervalSrvResponse>
{
  static const char* value()
  {
    return MD5Sum< ::sick_scan_xd::SickLocAutoStartSavePoseIntervalSrv >::value();
  }
  static const char* value(const ::sick_scan_xd::SickLocAutoStartSavePoseIntervalSrvResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::sick_scan_xd::SickLocAutoStartSavePoseIntervalSrvResponse> should match
// service_traits::DataType< ::sick_scan_xd::SickLocAutoStartSavePoseIntervalSrv >
template<>
struct DataType< ::sick_scan_xd::SickLocAutoStartSavePoseIntervalSrvResponse>
{
  static const char* value()
  {
    return DataType< ::sick_scan_xd::SickLocAutoStartSavePoseIntervalSrv >::value();
  }
  static const char* value(const ::sick_scan_xd::SickLocAutoStartSavePoseIntervalSrvResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace roswrap

#endif // SICK_SCAN_MESSAGE_SICKLOCAUTOSTARTSAVEPOSEINTERVALSRV_H
