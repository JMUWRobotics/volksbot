cmake_minimum_required(VERSION 3.5)
project(lms_starter)

# Add standard ROS 2 compile options
if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic -O3)
endif()

# Set C++ standard to C++14
set(CMAKE_CXX_STANDARD 14)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# Find necessary ROS 2 packages
find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(volksface REQUIRED)
# find_package(sick_scan_xd REQUIRED)
 

# uncomment the following line if msg/srv/action files are placed within this package
# finds the target generated by rosidl, necessary to link executables/libraries to target
# rosidl_get_typesupport_target(cpp_typesupport_target ${PROJECT_NAME} "rosidl_typesupport_cpp")

add_executable(lms_starter
  src/main.cc
)
ament_target_dependencies(lms_starter
  rclcpp
  volksface
  # "sick_scan_xd"
)
target_link_libraries(lms_starter "${cpp_typesupport_target}")

target_include_directories(lms_starter PUBLIC
  volksface/include
  # $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
  # $<INSTALL_INTERFACE:include>
)
# message( CMAKE_SOURCE_DIR="${CMAKE_SOURCE_DIR}" )

# Install executables
install(
  TARGETS lms_starter
  DESTINATION lib/${PROJECT_NAME}
)

# Install launch files.
install(DIRECTORY
  launch
  DESTINATION share/${PROJECT_NAME}/
)

ament_package()