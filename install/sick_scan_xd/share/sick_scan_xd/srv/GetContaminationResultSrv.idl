// generated from rosidl_adapter/resource/srv.idl.em
// with input from sick_scan_xd/srv/GetContaminationResultSrv.srv
// generated code does not contain a copyright notice


module sick_scan_xd {
  module srv {
    @verbatim (language="comment", text=
      "Definition of ROS service GetContaminationResult for sick_scan" "\n"
      "Read contamination indication result" "\n"
      "Example call (ROS1):" "\n"
      "rosservice call /sick_mrs_1xxx/GetContaminationResult \"{active: 1}\"" "\n"
      "")
    struct GetContaminationResultSrv_Request {
      uint8 structure_needs_at_least_one_member;
    };
    struct GetContaminationResultSrv_Response {
      @verbatim (language="comment", text=
        "Response (output)" "\n"
        "" "\n"
        "Result of contamination indication: warning is 0 (false) or 1 (true)")
      uint8 warning;

      @verbatim (language="comment", text=
        "Result of contamination indication: error is 0 (false) or 1 (true)")
      uint8 error;

      @verbatim (language="comment", text=
        "true: success response received from lidar, false: service failed (timeout or error status from controller)")
      boolean success;
    };
  };
};
