// generated from rosidl_adapter/resource/msg.idl.em
// with input from sick_scan_xd/msg/NAVReflectorData.msg
// generated code does not contain a copyright notice


module sick_scan_xd {
  module msg {
    @verbatim (language="comment", text=
      "ROS message of NAV350ReflectorData, see sick_nav_scandata_parser.h and NAV-350 telegram listing for details.")
    struct NAVReflectorData {
      @verbatim (language="comment", text=
        "cartesian data in lidar coordinates in mm")
      uint16 cartesian_data_valid;

      int32 x;

      int32 y;

      @verbatim (language="comment", text=
        "polar data in lidar coordinates in mm and mdeg")
      uint16 polar_data_valid;

      uint32 dist;

      uint32 phi;

      @verbatim (language="comment", text=
        "optional reflector data")
      uint16 opt_reflector_data_valid;

      uint16 local_id;

      uint16 global_id;

      uint8 type;

      uint16 sub_type;

      uint16 quality;

      uint32 timestamp;

      uint16 size;

      uint16 hit_count;

      uint16 mean_echo;

      uint16 start_index;

      uint16 end_index;

      @verbatim (language="comment", text=
        "reflector position in ros coordinates" "\n"
        "pose_x, pose_y and pose_yaw are valid if pose_valid > 0")
      int8 pos_valid;

      @verbatim (language="comment", text=
        "x position in ros coordinates in m")
      float pos_x;

      @verbatim (language="comment", text=
        "y position in ros coordinates in m")
      float pos_y;
    };
  };
};
