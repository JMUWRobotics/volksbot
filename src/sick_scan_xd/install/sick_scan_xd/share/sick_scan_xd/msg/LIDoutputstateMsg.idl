// generated from rosidl_adapter/resource/msg.idl.em
// with input from sick_scan_xd/msg/LIDoutputstateMsg.msg
// generated code does not contain a copyright notice

#include "std_msgs/msg/Header.idl"

module sick_scan_xd {
  module msg {
    @verbatim (language="comment", text=
      "This message contains the \"sSN LIDoutputstate\" message of a Sick laser scanner as an ros message.")
    struct LIDoutputstateMsg {
      @verbatim (language="comment", text=
        " ROS-1:" "\n"
        "Header header" "\n"
        " ROS-2:")
      std_msgs::msg::Header header;

      @verbatim (language="comment", text=
        "Status code" "\n"
        "Status code version number")
      uint16 version_number;

      @verbatim (language="comment", text=
        "Status code system counter (time in microsec since power up, max. 71 min then starting from 0 again)")
      uint32 system_counter;

      @verbatim (language="comment", text=
        "Array of output states (state and count)" "\n"
        "output states, each state with value 0 (not active), 1 (active) or 2 (not used)")
      sequence<uint8> output_state;

      @verbatim (language="comment", text=
        "output counter")
      sequence<uint32> output_count;

      @verbatim (language="comment", text=
        "Time block (sensortime from the last change of min. one of the outputs)" "\n"
        "No time data: 0, Time data: 1")
      uint16 time_state;

      @verbatim (language="comment", text=
        "f.e. 2021")
      uint16 year;

      @verbatim (language="comment", text=
        "1 ... 12")
      uint8 month;

      @verbatim (language="comment", text=
        "1 ... 31")
      uint8 day;

      @verbatim (language="comment", text=
        "0 ... 23")
      uint8 hour;

      @verbatim (language="comment", text=
        "0 ... 59")
      uint8 minute;

      @verbatim (language="comment", text=
        "0 ... 59")
      uint8 second;

      @verbatim (language="comment", text=
        "0 ... 999999")
      uint32 microsecond;
    };
  };
};
