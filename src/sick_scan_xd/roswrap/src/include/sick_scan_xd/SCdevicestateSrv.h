#include "sick_scan/sick_scan_base.h" /* Base definitions included in all header files, added by add_sick_scan_base_header.py. Do not edit this line. */
// Generated by gencpp from file sick_scan/SCdevicestateSrv.msg
// DO NOT EDIT!


#ifndef SICK_SCAN_MESSAGE_SCDEVICESTATESRV_H
#define SICK_SCAN_MESSAGE_SCDEVICESTATESRV_H

#include <ros/service_traits.h>


#include <sick_scan_xd/SCdevicestateSrvRequest.h>
#include <sick_scan_xd/SCdevicestateSrvResponse.h>


namespace sick_scan_xd
{

struct SCdevicestateSrv
{

typedef SCdevicestateSrvRequest Request;
typedef SCdevicestateSrvResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct SCdevicestateSrv
} // namespace sick_scan_xd


namespace roswrap
{
namespace service_traits
{


template<>
struct MD5Sum< ::sick_scan_xd::SCdevicestateSrv > {
  static const char* value()
  {
    return "112e7992c0a1025af8b2c1b11d515e09";
  }

  static const char* value(const ::sick_scan_xd::SCdevicestateSrv&) { return value(); }
};

template<>
struct DataType< ::sick_scan_xd::SCdevicestateSrv > {
  static const char* value()
  {
    return "sick_scan/SCdevicestateSrv";
  }

  static const char* value(const ::sick_scan_xd::SCdevicestateSrv&) { return value(); }
};


// service_traits::MD5Sum< ::sick_scan_xd::SCdevicestateSrvRequest> should match
// service_traits::MD5Sum< ::sick_scan_xd::SCdevicestateSrv >
template<>
struct MD5Sum< ::sick_scan_xd::SCdevicestateSrvRequest>
{
  static const char* value()
  {
    return MD5Sum< ::sick_scan_xd::SCdevicestateSrv >::value();
  }
  static const char* value(const ::sick_scan_xd::SCdevicestateSrvRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::sick_scan_xd::SCdevicestateSrvRequest> should match
// service_traits::DataType< ::sick_scan_xd::SCdevicestateSrv >
template<>
struct DataType< ::sick_scan_xd::SCdevicestateSrvRequest>
{
  static const char* value()
  {
    return DataType< ::sick_scan_xd::SCdevicestateSrv >::value();
  }
  static const char* value(const ::sick_scan_xd::SCdevicestateSrvRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::sick_scan_xd::SCdevicestateSrvResponse> should match
// service_traits::MD5Sum< ::sick_scan_xd::SCdevicestateSrv >
template<>
struct MD5Sum< ::sick_scan_xd::SCdevicestateSrvResponse>
{
  static const char* value()
  {
    return MD5Sum< ::sick_scan_xd::SCdevicestateSrv >::value();
  }
  static const char* value(const ::sick_scan_xd::SCdevicestateSrvResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::sick_scan_xd::SCdevicestateSrvResponse> should match
// service_traits::DataType< ::sick_scan_xd::SCdevicestateSrv >
template<>
struct DataType< ::sick_scan_xd::SCdevicestateSrvResponse>
{
  static const char* value()
  {
    return DataType< ::sick_scan_xd::SCdevicestateSrv >::value();
  }
  static const char* value(const ::sick_scan_xd::SCdevicestateSrvResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace roswrap

#endif // SICK_SCAN_MESSAGE_SCDEVICESTATESRV_H
