#include "sick_scan/sick_scan_base.h" /* Base definitions included in all header files, added by add_sick_scan_base_header.py. Do not edit this line. */
// Generated by gencpp from file sick_scan/SickLocResultPoseIntervalSrv.msg
// DO NOT EDIT!


#ifndef SICK_SCAN_MESSAGE_SICKLOCRESULTPOSEINTERVALSRV_H
#define SICK_SCAN_MESSAGE_SICKLOCRESULTPOSEINTERVALSRV_H

#include <ros/service_traits.h>


#include <sick_scan_xd/SickLocResultPoseIntervalSrvRequest.h>
#include <sick_scan_xd/SickLocResultPoseIntervalSrvResponse.h>


namespace sick_scan_xd
{

struct SickLocResultPoseIntervalSrv
{

typedef SickLocResultPoseIntervalSrvRequest Request;
typedef SickLocResultPoseIntervalSrvResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct SickLocResultPoseIntervalSrv
} // namespace sick_scan_xd


namespace roswrap
{
namespace service_traits
{


template<>
struct MD5Sum< ::sick_scan_xd::SickLocResultPoseIntervalSrv > {
  static const char* value()
  {
    return "5fbbb521f9143c1864acfd50dae1fd6e";
  }

  static const char* value(const ::sick_scan_xd::SickLocResultPoseIntervalSrv&) { return value(); }
};

template<>
struct DataType< ::sick_scan_xd::SickLocResultPoseIntervalSrv > {
  static const char* value()
  {
    return "sick_scan/SickLocResultPoseIntervalSrv";
  }

  static const char* value(const ::sick_scan_xd::SickLocResultPoseIntervalSrv&) { return value(); }
};


// service_traits::MD5Sum< ::sick_scan_xd::SickLocResultPoseIntervalSrvRequest> should match
// service_traits::MD5Sum< ::sick_scan_xd::SickLocResultPoseIntervalSrv >
template<>
struct MD5Sum< ::sick_scan_xd::SickLocResultPoseIntervalSrvRequest>
{
  static const char* value()
  {
    return MD5Sum< ::sick_scan_xd::SickLocResultPoseIntervalSrv >::value();
  }
  static const char* value(const ::sick_scan_xd::SickLocResultPoseIntervalSrvRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::sick_scan_xd::SickLocResultPoseIntervalSrvRequest> should match
// service_traits::DataType< ::sick_scan_xd::SickLocResultPoseIntervalSrv >
template<>
struct DataType< ::sick_scan_xd::SickLocResultPoseIntervalSrvRequest>
{
  static const char* value()
  {
    return DataType< ::sick_scan_xd::SickLocResultPoseIntervalSrv >::value();
  }
  static const char* value(const ::sick_scan_xd::SickLocResultPoseIntervalSrvRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::sick_scan_xd::SickLocResultPoseIntervalSrvResponse> should match
// service_traits::MD5Sum< ::sick_scan_xd::SickLocResultPoseIntervalSrv >
template<>
struct MD5Sum< ::sick_scan_xd::SickLocResultPoseIntervalSrvResponse>
{
  static const char* value()
  {
    return MD5Sum< ::sick_scan_xd::SickLocResultPoseIntervalSrv >::value();
  }
  static const char* value(const ::sick_scan_xd::SickLocResultPoseIntervalSrvResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::sick_scan_xd::SickLocResultPoseIntervalSrvResponse> should match
// service_traits::DataType< ::sick_scan_xd::SickLocResultPoseIntervalSrv >
template<>
struct DataType< ::sick_scan_xd::SickLocResultPoseIntervalSrvResponse>
{
  static const char* value()
  {
    return DataType< ::sick_scan_xd::SickLocResultPoseIntervalSrv >::value();
  }
  static const char* value(const ::sick_scan_xd::SickLocResultPoseIntervalSrvResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace roswrap

#endif // SICK_SCAN_MESSAGE_SICKLOCRESULTPOSEINTERVALSRV_H
